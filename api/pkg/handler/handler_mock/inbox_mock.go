// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jesusnoseq/request-inbox/pkg/handler (interfaces: IInboxHandler)

// Package handler_mock is a generated GoMock package.
package handler_mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockIInboxHandler is a mock of IInboxHandler interface.
type MockIInboxHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIInboxHandlerMockRecorder
}

// MockIInboxHandlerMockRecorder is the mock recorder for MockIInboxHandler.
type MockIInboxHandlerMockRecorder struct {
	mock *MockIInboxHandler
}

// NewMockIInboxHandler creates a new mock instance.
func NewMockIInboxHandler(ctrl *gomock.Controller) *MockIInboxHandler {
	mock := &MockIInboxHandler{ctrl: ctrl}
	mock.recorder = &MockIInboxHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIInboxHandler) EXPECT() *MockIInboxHandlerMockRecorder {
	return m.recorder
}

// AcceptCookies mocks base method.
func (m *MockIInboxHandler) AcceptCookies(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AcceptCookies", arg0)
}

// AcceptCookies indicates an expected call of AcceptCookies.
func (mr *MockIInboxHandlerMockRecorder) AcceptCookies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcceptCookies", reflect.TypeOf((*MockIInboxHandler)(nil).AcceptCookies), arg0)
}

// CreateInbox mocks base method.
func (m *MockIInboxHandler) CreateInbox(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateInbox", arg0)
}

// CreateInbox indicates an expected call of CreateInbox.
func (mr *MockIInboxHandlerMockRecorder) CreateInbox(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInbox", reflect.TypeOf((*MockIInboxHandler)(nil).CreateInbox), arg0)
}

// DeleteInbox mocks base method.
func (m *MockIInboxHandler) DeleteInbox(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteInbox", arg0)
}

// DeleteInbox indicates an expected call of DeleteInbox.
func (mr *MockIInboxHandlerMockRecorder) DeleteInbox(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInbox", reflect.TypeOf((*MockIInboxHandler)(nil).DeleteInbox), arg0)
}

// DeleteInboxRequests mocks base method.
func (m *MockIInboxHandler) DeleteInboxRequests(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteInboxRequests", arg0)
}

// DeleteInboxRequests indicates an expected call of DeleteInboxRequests.
func (mr *MockIInboxHandlerMockRecorder) DeleteInboxRequests(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInboxRequests", reflect.TypeOf((*MockIInboxHandler)(nil).DeleteInboxRequests), arg0)
}

// GetInbox mocks base method.
func (m *MockIInboxHandler) GetInbox(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetInbox", arg0)
}

// GetInbox indicates an expected call of GetInbox.
func (mr *MockIInboxHandlerMockRecorder) GetInbox(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInbox", reflect.TypeOf((*MockIInboxHandler)(nil).GetInbox), arg0)
}

// Health mocks base method.
func (m *MockIInboxHandler) Health(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Health", arg0)
}

// Health indicates an expected call of Health.
func (mr *MockIInboxHandlerMockRecorder) Health(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Health", reflect.TypeOf((*MockIInboxHandler)(nil).Health), arg0)
}

// ListInbox mocks base method.
func (m *MockIInboxHandler) ListInbox(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListInbox", arg0)
}

// ListInbox indicates an expected call of ListInbox.
func (mr *MockIInboxHandlerMockRecorder) ListInbox(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInbox", reflect.TypeOf((*MockIInboxHandler)(nil).ListInbox), arg0)
}

// RegisterInboxRequest mocks base method.
func (m *MockIInboxHandler) RegisterInboxRequest(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RegisterInboxRequest", arg0)
}

// RegisterInboxRequest indicates an expected call of RegisterInboxRequest.
func (mr *MockIInboxHandlerMockRecorder) RegisterInboxRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterInboxRequest", reflect.TypeOf((*MockIInboxHandler)(nil).RegisterInboxRequest), arg0)
}

// UpdateInbox mocks base method.
func (m *MockIInboxHandler) UpdateInbox(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateInbox", arg0)
}

// UpdateInbox indicates an expected call of UpdateInbox.
func (mr *MockIInboxHandlerMockRecorder) UpdateInbox(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateInbox", reflect.TypeOf((*MockIInboxHandler)(nil).UpdateInbox), arg0)
}
