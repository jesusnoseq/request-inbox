name: Deploy app

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: ["main"]
    paths:
      - "deploy/**"
      - "front/**"
      - "api/**"

env:
  TF_VAR_API_SNAPSHOT_VERSION: ${{ github.run_number }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install front dependencies
        run: npm ci
        working-directory: ./front
      - name: Build front
        run: npm run build
        working-directory: ./front
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache-dependency-path: api/go.sum
      - name: Build back
        working-directory: ./api
        run: GOOS=linux CGO_ENABLED=0 go build -tags=jsoniter -v -o ../bootstrap ./cmd/main.go
      - name: Connect to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: awssync_deploy_session
          role-to-assume: ${{secrets.AWS_IAM_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.49.0
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.5
      - name: Terraform Init
        working-directory: ./deploy
        run: terraform init
      - name: Terraform Plan
        env:
          TF_VAR_hosted_zone_id: ${{ secrets.AWS_DNS_ZONE }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_login_github_client_id: ${{ secrets.LOGIN_GITHUB_CLIENT_ID }}
          TF_VAR_login_github_client_secret: ${{ secrets.LOGIN_GITHUB_CLIENT_SECRET }}
          TF_VAR_login_google_client_id: ${{ secrets.LOGIN_GOOGLE_CLIENT_ID }}
          TF_VAR_login_google_client_secret: ${{ secrets.LOGIN_GOOGLE_CLIENT_SECRET }}
          TF_VAR_auth_cookie_domain: ${{ env.AUTH_COOKIE_DOMAIN }}
          TF_VAR_frontend_application_url: ${{ env.FRONTEND_APPLICATION_URL }}
          TF_VAR_login_github_callback: ${{ env.LOGIN_GITHUB_CALLBACK }}
          TF_VAR_login_google_callback: ${{ env.LOGIN_GOOGLE_CALLBACK }}
        working-directory: ./deploy
        run: terraform plan -input=false
      - name: Terraform Apply
        env:
          TF_VAR_hosted_zone_id: ${{ secrets.AWS_DNS_ZONE }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_login_github_client_id: ${{ secrets.LOGIN_GITHUB_CLIENT_ID }}
          TF_VAR_login_github_client_secret: ${{ secrets.LOGIN_GITHUB_CLIENT_SECRET }}
          TF_VAR_login_google_client_id: ${{ secrets.LOGIN_GOOGLE_CLIENT_ID }}
          TF_VAR_login_google_client_secret: ${{ secrets.LOGIN_GOOGLE_CLIENT_SECRET }}
          TF_VAR_auth_cookie_domain: ${{ env.AUTH_COOKIE_DOMAIN }}
          TF_VAR_frontend_application_url: ${{ env.FRONTEND_APPLICATION_URL }}
          TF_VAR_login_github_callback: ${{ env.LOGIN_GITHUB_CALLBACK }}
          TF_VAR_login_google_callback: ${{ env.LOGIN_GOOGLE_CALLBACK }}
        working-directory: ./deploy
        run: terraform apply -auto-approve
